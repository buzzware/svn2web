#!/usr/bin/php
<?php
// Used by the new cvs to web to ftp files (using expect and ftp
// command-line utils) to a server.
//
// USAGE:  put_ftp username:password@machine:/folder options /absolute/path/to/local/files file1 file2 file3...
//   (password is optional if ssh/ftp has been setup to not require it)
//
// Creates a script to feed commands to lftp.
//

$LFTP_BIN = '/usr/local/bin/lftp';

if( !defined('STDERR') ) define(STDERR, fopen('php://stderr', 'w') );

$shellargs = clone $argv;

$remoteStuff = $shellargs[1];
$options = $shellargs[2];
$localStuff = $shellargs[3];

array_shift($shellargs); //remove the script filename
array_shift($shellargs); //remove the connection string (remoteStuff)
array_shift($shellargs); //remove the local dir
array_shift($shellargs); //remove the options

if (preg_match('/(.*):(.*)@(.*):(.*)/', $remoteStuff, $matches)) {
  $user = $matches[1];
  $password = $matches[2];
  $machine = $matches[3];
  $dir = $matches[4];
}
elseif (preg_match('/(.*)@(.*):(.*)/', $remoteStuff, $matches)) {
  $user = $matches[1];
  $password = "";
  $machine = $matches[2];
  $dir = $matches[3];
}
else {
  fwrite(STDERR, "$remoteStuff  must be:  user:password@machine:dir\nYou sent: {$shellargs}\n");
  exit(1);
}

$dirs = array();
$d = $dir;
while ($d != "" && $d != "/" && $d != ".") {
  array_unshift($dirs, $d);
  $d = dirname($d);
}
array_shift($dirs); // Don't try to create root-level directory.

// this works with BigCommerce :

//#debug
//set ftp:ssl-allow-anonymous yes
//set ssl:verify-certificate off
//set ftp:passive-mode on
//set ftp:ssl-force on
//set ftp:ssl-allow on
//open -u username,password server.bigcommerce.com
//lcd /Users/gary/repos/svn2web
//cd "/content"
//put "README" "README"
//exit

$ftpCommands = array();
//$ftpCommands[] = "debug";
$ftpCommands[] = "set ftp:ssl-allow-anonymous yes";
$ftpCommands[] = "set ssl:verify-certificate off";
$ftpCommands[] = "set ftp:passive-mode on";
$ftpCommands[] = "set ftp:ssl-force on";
$ftpCommands[] = "set ftp:ssl-allow on";
$ftpCommands[] = "open -u $user,$password $machine";
$ftpCommands[] = "lcd $localStuff";
// $ftpCommands[] = "!pwd";

foreach ($dirs AS $d) { // Simulate mkdir -p:
  $ftpCommands[] = "mkdir \"$d\"";
}
$ftpCommands[] ="cd \"$dir\"";
$cwd = "";  // Keep track of current working directory...
foreach ($shellargs AS $f) {
  putFile($ftpCommands, $f, $cwd);  // Puts files, creating directories as needed
}
$ftpCommands[] ="exit";

// Now lets write a lftp script
$script_name = tempnam("/tmp", "script.lftp");
$script = fopen($script_name, "w");
foreach ($ftpCommands AS $c) {
	fwrite($script, "$c\n");
}
fclose($script);

print("Created script $script_name");
//exec("/usr/local/bin/lftp -f $script_name 2>&1", $output, $err);
exec("$LFTP_BIN -f $script_name", $output, $err);
if ($err) {
   fwrite(STDERR, implode("\n", $output));
   exit($err);
}

// username:password@machine:/folder options /absolute/path/to/local/files file1 file2

// becomes

//	debug
//	open -u username,password machine
//	prompt off
//	lcd /absolute/path/to/local/files
//	cd \"/folder\"
//	put \"file1\" \"file1\"
//	put \"file2\" \"file2\"
//	exit

function putFile(&$ftpCommands, $f, &$cwd)
{
  $d = dirname($f);
  if ($d == "." or $d == "/") { $d = ""; }
  $baseF = basename($f);
  if ($d != $cwd) {
    doDirectoryNonsense($ftpCommands, $d, $cwd);
  }
  $ftpCommands[] ="put \"$f\" \"$baseF\"";
}

// Create intermediate directories down to $d, and
// change directory to d.
function doDirectoryNonsense(&$ftpCommands, $d, &$cwd)
{
  if (empty($cwd)) { $dirs1 = array(); }
  else {  $dirs1 = explode('/', $cwd); }
  if (empty($d)) { $dirs2 = array(); }
  else { $dirs2 = explode('/', $d); }

  // Remove common ancestors:
  while ((count($dirs1) > 0) && (count($dirs2) > 0) && ($dirs1[0] == $dirs2[0])) {
    array_shift($dirs1);
    array_shift($dirs2);
  }
  if (!empty($dirs1)) {
	  //$up .= str_repeat("../", count($dirs1)); // Go up to common ancestor...
	  $up = str_repeat("../", count($dirs1)); // Go up to common ancestor...
    $ftpCommands[] ="cd $up";
  }
  if (!empty($dirs2)) {
    foreach ($dirs2 AS $dd) {
      $ftpCommands[] ="mkdir \"$dd\"";
      $ftpCommands[] ="cd \"$dd\"";
    }
  }
  $cwd = $d;
}

?>
